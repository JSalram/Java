Index: src/com/company/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Main.java	(date 1574976806000)
+++ src/com/company/Main.java	(date 1574976806000)
@@ -108,148 +108,22 @@
                 int tam = sc.nextInt();
                 while (tam < s.length())
                 {
-                    System.out.println("El tamaño máx debe ser igual o mayor que el tamaño de la cadena, " +
+                    System.out.println("El tamaño máx debe ser mayor que el tamaño de la cadena, " +
                                        "por favor vuelve a insertar el tamaño:");
                     tam = sc.nextInt();
                 }
-                System.out.println("Espacios por delante:");
                 padLeft(s, tam);
-                System.out.println("Espacios por detrás:");
                 padRight(s, tam);
 
             }
                 break;
             case 7:
-            {
-                System.out.println("Dime una frase y le borro todos los espacios:");
-                String s = sc.nextLine();
-                s = quitaEspacios(s);
-                System.out.println("La frase sin espacios queda así:");
-                System.out.println(s);
-            }
                 break;
             case 8:
-            {
-                System.out.println("Dime una frase y le borro todos los espacios de delante y detrás de la frase:");
-                String s = sc.nextLine();
-                s = quitaEspaciosTrim(s);
-                System.out.println("La frase sin espacios delante y detrás queda así:");
-                System.out.println(s);
-            }
                 break;
             case 9:
-            {
-                System.out.println("Dime una frase, un caracter que quieras sustituir y " +
-                                    "el caracter por el cual quieres sustituirlo:");
-                System.out.print("FRASE - ");
-                String s = sc.nextLine();
-                System.out.print("CARÁCTER A REEMPLAZAR - ");
-                String s2 = sc.next();
-                while (s2.length() > 1)
-                {
-                    System.out.println("Has escrito más de un carácter, vuelve a escribirlo: ");
-                    s2 = sc.next();
-                }
-                char c = s2.charAt(0);
-                System.out.print("CARÁCTER POR EL QUE REEMPLAZAR - ");
-                String s3 = sc.next();
-                while (s3.length() > 1)
-                {
-                    System.out.println("Has escrito más de un carácter, vuelve a escribirlo: ");
-                    s3 = sc.next();
-                }
-                char c2 = s3.charAt(0);
-                s = sustituyeCaracter(s, c, c2);
-                System.out.println(s);
-            }
                 break;
             case 10:
-            {
-                System.out.println("Dime una frase y te digo cuántas palabras contiene:");
-                String s = sc.nextLine();
-                System.out.println("La frase contiene " + cuentaPalabras(s) + " palabra(s)");
-            }
-                break;
-            case 11:
-            {
-                System.out.println("Dime una cadena y te digo si está compuesta entera de números:");
-                String s = sc.next();
-                if (esNumero(s))
-                {
-                    System.out.println("Está compuesta completamente por números");
-                    int cifra = Integer.parseInt(s);
-                    System.out.println("La cifra concreta es: " + cifra);
-                }
-                else
-                {
-                    System.out.println("NO está compuesta completamente por números");
-                }
-            }
-                break;
-            case 12:
-            {
-                System.out.println("Dime una cadena y un carácter que quieres que elimine de esa cadena: ");
-                System.out.print("CADENA - ");
-                String s = sc.nextLine();
-                System.out.print("CARÁCTER - ");
-                String s2 = sc.nextLine();
-                while (s2.length() > 1)
-                {
-                    System.out.println("Has escrito más de un carácter, vuelve a escribirlo: ");
-                    s2 = sc.next();
-                }
-                char c = s2.charAt(0);
-                s = quitaCaracter(s, c);
-                System.out.print("Frase sin el carácter (" + c + "): " + s);
-            }
-                break;
-            case 13:
-            {
-                System.out.println("Dime una frase y le quito los acentos:");
-                String s = sc.nextLine();
-                s = quitaAcentos(s);
-                System.out.println(s);
-            }
-                break;
-            case 14:
-            {
-                System.out.println("Dime una cadena y la invierto: ");
-                String s = sc.nextLine();
-                s = invierteCadena(s);
-                System.out.println("Cadena invertida: " + s);
-            }
-                break;
-            case 15:
-            {
-                System.out.println("Dime una frase y un caracter y te digo el nº de veces que aparece:");
-                System.out.print("FRASE - ");
-                String s = sc.nextLine();
-                System.out.print("CARÁCTER - ");
-                String s2 = sc.next();
-                while (s2.length() > 1)
-                {
-                    System.out.println("Has escrito más de un carácter, vuelve a escribirlo: ");
-                    s2 = sc.next();
-                }
-                char c = s2.charAt(0);
-                System.out.println("Nº de veces que aparece el carácter (" + c + "): " + vecesCaracter(s, c));
-            }
-                break;
-            case 16:
-            {
-                System.out.println("Dime una frase y una palabra y te digo el nº de veces que aparece:");
-                System.out.print("FRASE - ");
-                String s = sc.nextLine();
-                System.out.print("PALABRA - ");
-                String s2 = sc.nextLine();
-                while (numeroEspacios(s2) > 0)
-                {
-                    System.out.print("¿Desde cuando las palabras contienen espacios? Vuelve a escribir la palabra: ");
-                    s2 = sc.nextLine();
-                }
-                System.out.println("Veces que se repite la palabra (" + s2 + "): " + vecesPalabra(s, s2));
-            }
-                break;
             default:
                 System.out.println("\u001B[31m" + "----- FATAL ERROR -----");
                 break;
@@ -339,197 +213,5 @@
             System.out.print(" ");
         }
     }
-    public static String quitaEspacios (String s)
-    {
-        String s2 = "";
-        int i;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (s.charAt(i) != ' ')
-            {
-                s2 = s2 + s.charAt(i);
-            }
-        }
-        return s2;
-    }
-    public static String quitaEspaciosTrim (String s)
-    {
-        int i, espaciosIzq = 0, espaciosDer = 0;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (s.charAt(i) == ' ')
-            {
-                espaciosIzq++;
-            }
-            else
-            {
 
-                i = s.length();
-            }
-        }
-        for (i = s.length()-1; i > 0; i--)
-        {
-            if (s.charAt(i) == ' ')
-            {
-                espaciosDer++;
-            }
-            else
-            {
-                i = 0;
-            }
-        }
-//        String s2 = s.substring(espaciosIzq, (s.length()-espaciosDer));
-//        return s2;
-        return s.substring(espaciosIzq, (s.length()-espaciosDer));
-    }
-    public static String sustituyeCaracter (String s, char c, char c2)
-    {
-        String s2 = "";
-        int i;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (s.charAt(i) != c)
-            {
-                s2 = s2 + s.charAt(i);
-            }
-            else
-            {
-                s2 = s2 + c2;
-            }
-        }
-        return s2;
-    }
-    public static int cuentaPalabras (String s)
-    {
-        int palabras = 0, i;
-        for (i = 0; i < s.length(); i++)
-        {
-            while (s.charAt(i) != ' ' && i < s.length()-1)
-            {
-                    i++;
-            }
-            if (i+1 == s.length() || (s.charAt(i) == ' ' && i != 0))
-            {
-            palabras++;
-            }
-            while (s.charAt(i) == ' ' && i != s.length()-1)
-            {
-                i++;
-            }
-        }
-        return palabras;
-    }
-    public static boolean esNumero (String s)
-    {
-        boolean numeros = true;
-        int i;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (!Character.isDigit(s.charAt(i)))
-            {
-                numeros = false;
-                i = s.length();
-            }
-        }
-        return numeros;
-    }
-    public static String quitaCaracter (String s, char c)
-    {
-        String s2 = "";
-        int i;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (s.charAt(i) != c)
-            {
-                s2 = s2 + s.charAt(i);
-            }
-        }
-        return s2;
-    }
-    public static String quitaAcentos (String s)
-    {
-        String conAcentos = "ÁÉÍÓÚÜáéíóúü", sinAcentos = "AEIOUUaeiouu", s2 = "";
-        boolean acentuado;
-        int i, k;
-        for (i = 0; i < s.length(); i++)
-        {
-            acentuado = false;
-            for (k = 0; k < conAcentos.length(); k++)
-            {
-                if (s.charAt(i) == conAcentos.charAt(k))
-                {
-                    acentuado = true;
-                    s2 = s2 + sinAcentos.charAt(k);
-                    k = conAcentos.length();
-                }
-            }
-            if (!acentuado)
-            {
-                s2 = s2 + s.charAt(i);
-            }
-        }
-        return s2;
-    }
-    public static String invierteCadena (String s)
-    {
-        String s2 = "";
-        int i;
-        for (i = s.length()-1; i >= 0; i--)
-        {
-            s2 = s2 + s.charAt(i);
-        }
-        return s2;
-    }
-    public static int vecesCaracter (String s, char c)
-    {
-        int caracteres = 0, i;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (s.charAt(i) == c)
-            {
-                caracteres++;
-            }
-        }
-        return caracteres;
-    }
-    public static int vecesPalabra (String s, String palabra)
-    {
-        int i, aparece = 0;
-        String unEspacio = "";
-        for (i = 0; i < s.length(); i++)
-        {
-            unEspacio = s.replace("  ", " ");
-        }
-        String[] palabras =unEspacio.split(" ");
-        for (i = 0; i < palabras.length; i++)
-        {
-            if (palabras[i].equals(palabra))
-            {
-                aparece++;
-            }
-        }
-        return aparece;
-    }
-    public static String mayusculasPrimera (String s)
-    {
-        String s2 = "";
-        int i;
-        for (i = 0; i < s.length(); i++)
-        {
-            if (s.charAt(i) == ' ')
-            {
-                s2 = s2 + s.charAt(i);
-            }
-            if (s.charAt(i) != ' ')
-            {
-                s2 = s2 + Character.toUpperCase(s.charAt(i));
-                while (s.charAt(i) != ' ')
-                {
-                    s2 = s2 + s.charAt(i);
-                    i++;
-                }
-            }
-        }
-        return s2;
-    }
 }
